@using System.Globalization
@model Tenis3t.Models.VentaViewModel

@{
    ViewData["Title"] = "Métodos de Pago";
}

<div class="container">
    <div class="card">
        <div class="card-header">
            <h1 class="mb-0">Métodos de Pago</h1>
            <h4 class="mb-0">Total de la Venta: @ViewBag.TotalVenta.ToString("C", new CultureInfo("es-CO"))</h4>
        </div>

        @if (TempData["ErrorMessage"] != null)
        {
            <div class="alert alert-danger m-3">
                @TempData["ErrorMessage"]
            </div>
        }

        <form asp-action="MetodosPago" method="post" id="formPagos">
            <div asp-validation-summary="ModelOnly" class="text-danger m-3"></div>

            <input type="hidden" asp-for="NombreCliente" />
            @for (int i = 0; i < Model.Detalles.Count; i++)
            {
                <input type="hidden" asp-for="@Model.Detalles[i].ProductoId" />
                <input type="hidden" asp-for="@Model.Detalles[i].NombreProducto" />
                <input type="hidden" asp-for="@Model.Detalles[i].TallaInventarioId" />
                <input type="hidden" asp-for="@Model.Detalles[i].Talla" />
                <input type="hidden" asp-for="@Model.Detalles[i].Cantidad" />
                <input type="hidden" asp-for="@Model.Detalles[i].PrecioUnitario" />
            }

            <div class="card-body">
                <!-- Productos Seleccionados -->
                <div class="mb-4">
                    <h4 class="mb-3">Productos Seleccionados</h4>
                    <div class="table-responsive">
                        <table class="table table-striped table-bordered">
                            <thead class="thead-dark">
                                <tr>
                                    <th>Producto</th>
                                    <th>Talla</th>
                                    <th>Cantidad</th>
                                    <th>Precio Unitario</th>
                                    <th>Subtotal</th>
                                </tr>
                            </thead>
                            <tbody>
                                @for (int i = 0; i < Model.Detalles.Count; i++)
                                {
                                    <tr>
                                        <td>@Model.Detalles[i].NombreProducto</td>
                                        <td>@Model.Detalles[i].Talla</td>
                                        <td>@Model.Detalles[i].Cantidad</td>
                                        <td>@Model.Detalles[i].PrecioUnitario.ToString("C", new CultureInfo("es-CO"))</td>
                                        <td>@((Model.Detalles[i].PrecioUnitario * Model.Detalles[i].Cantidad).ToString("C",
                                                                                    new CultureInfo("es-CO")))</td>
                                </tr>
                                                                }
                            </tbody>
                        </table>
                    </div>
                </div>

                <!-- Métodos de Pago -->
                <div class="mb-4">
                    <div class="d-flex justify-content-between align-items-center mb-3">
                        <h4 class="mb-0">Métodos de Pago</h4>
                        <button type="button" class="btn btn-success" id="btnAgregarMetodo">
                            <i class="bi bi-plus-circle"></i> Agregar Método
                        </button>
                    </div>

                    <div id="metodosPagoContainer">
                        @if (Model.MetodosPago != null && Model.MetodosPago.Count > 0)
                        {
                            @for (int i = 0; i < Model.MetodosPago.Count; i++)
                            {
                                <div class="card mb-3 metodo-pago-item" data-index="@i">
                                    <div class="card-body">
                                        <div class="row">
                                            <div class="col-md-4">
                                                <div class="form-group">
                                                    <label class="control-label">Método de Pago</label>
                                                    <select asp-for="@Model.MetodosPago[i].MetodoPagoId"
                                                        class="form-control metodo-pago-select"
                                                        onchange="actualizarMetodoPago(this)">
                                                        <option value="">Seleccione...</option>
                                                        @foreach (var metodo in ViewBag.MetodosPagoDisponibles)
                                                        {
                                                            <option value="@metodo.Value">@metodo.Text</option>
                                                        }
                                                    </select>
                                                    <span asp-validation-for="@Model.MetodosPago[i].MetodoPagoId"
                                                        class="text-danger"></span>
                                                </div>
                                            </div>
                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    <label class="control-label">Monto</label>
                                                    <div class="input-group">
                                                        <div class="input-group-prepend">
                                                            <span class="input-group-text">$</span>
                                                        </div>
                                                        <input asp-for="@Model.MetodosPago[i].Monto"
                                                            class="form-control monto-input" oninput="calcularTotalPagos()" />
                                                    </div>
                                                    <span asp-validation-for="@Model.MetodosPago[i].Monto"
                                                        class="text-danger"></span>
                                                </div>
                                            </div>
                                            <div class="col-md-2 d-flex align-items-end">
                                                <button type="button" class="btn btn-danger btn-sm btn-eliminar-metodo"
                                                    onclick="eliminarMetodoPago(this)">
                                                    <i class="bi bi-trash"></i> Eliminar
                                                </button>

                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                        else
                        {
                            <div class="card mb-3 metodo-pago-item" data-index="0">
                                <div class="card-body">
                                    <div class="row">
                                        <div class="col-md-4">
                                            <div class="form-group">
                                                <label class="control-label">Método de Pago</label>
                                                <select name="MetodosPago[0].MetodoPagoId"
                                                    class="form-control metodo-pago-select"
                                                    onchange="actualizarMetodoPago(this)">
                                                    <option value="">Seleccione...</option>
                                                    @foreach (var metodo in ViewBag.MetodosPagoDisponibles)
                                                    {
                                                        <option value="@metodo.Value">@metodo.Text</option>
                                                    }
                                                </select>
                                                <span class="text-danger field-validation-valid"
                                                    data-valmsg-for="MetodosPago[0].MetodoPagoId"
                                                    data-valmsg-replace="true"></span>
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="form-group">
                                                <label class="control-label">Monto</label>
                                                <div class="input-group">
                                                    <div class="input-group-prepend">
                                                        <span class="input-group-text">$</span>
                                                    </div>
                                                    <input name="MetodosPago[0].Monto" class="form-control monto-input"
                                                        type="number" min="0" step="0.01" oninput="calcularTotalPagos()" />
                                                </div>
                                                <span class="text-danger field-validation-valid"
                                                    data-valmsg-for="MetodosPago[0].Monto"
                                                    data-valmsg-replace="true"></span>
                                            </div>
                                        </div>
                                        <div class="col-md-2 d-flex align-items-end">
                                            <button type="button" class="btn btn-danger btn-sm"
                                                onclick="eliminarMetodoPago(this)" disabled>
                                                <i class="bi bi-trash"></i> Eliminar
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                    <small id="maxMetodosMsg" class="text-muted d-none">Máximo 4 métodos de pago alcanzado</small>
                </div>

                <!-- Resumen de Pagos -->
                <div class="card mb-4">
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-6">
                                <h5>Total Venta: <span class="float-right">@ViewBag.TotalVenta.ToString("C", new
                                                                                CultureInfo("es-CO"))</span></h5>
                                <h5>Total Pagado: <span id="totalPagado" class="float-right">0</span></h5>
                                <h4 id="restanteContainer">
                                    Restante: <span id="restante" class="float-right">@ViewBag.TotalVenta.ToString("C",
                                                                                new CultureInfo("es-CO"))</span>
                                </h4>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Botones de Acción -->
                <div class="d-flex justify-content-between">
                    <div>
                        <a asp-action="Create" class="btn btn-danger">
                            <i class="fas fa-arrow-left"></i> Volver
                        </a>
                    </div>
                    <div>
                        <button type="submit" class="btn btn-primary" id="submitBtn">
                            <i class="fas fa-check"></i> Confirmar Venta
                        </button>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
              t metodoCounter = $('#metodosPagoContainer .metodo-pago-item').length;

        $(document).ready(function () {
            // Habilitar botones si hay más de uno
            if (metodoCounter > 1) {
                $('.btn-eliminar-metodo').prop('disabled', false);
            }
            calcularTotalPagos();
            // Evento para agregar método de pago
            $('#btnAgregarMetodo').click(function () {
                if (metodoCounter >= 4) {
                    $('#maxMetodosMsg').removeClass('d-none');
                    return;
                }

                var newIndex = metodoCounter;
                metodoCounter++;

                var html = `
        <div class="card mb-3 metodo-pago-item" data-index="${newIndex}">
            <div class="card-body">
                <div class="row">
                    <div class="col-md-4">
                        <div class="form-group">
                            <label class="control-label">Método de Pago</label>
                            <select name="MetodosPago[${newIndex}].MetodoPagoId" 
                                    class="form-control metodo-pago-select" 
                                    onchange="actualizarMetodoPago(this)">
                                <option value="">Seleccione...</option>
                                @foreach (var metodo in ViewBag.MetodosPagoDisponibles)
                                {
                                        <option value="@metodo.Value">@metodo.Text</option>
                                }
                            </select>
                            <span class="text-danger field-validation-valid" 
                                  data-valmsg-for="MetodosPago[${newIndex}].MetodoPagoId" 
                                  data-valmsg-replace="true"></span>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            <label class="control-label">Monto</label>
                            <div class="input-group">
                                <div class="input-group-prepend">
                                    <span class="input-group-text">$</span>
                                </div>
                                <input name="MetodosPago[${newIndex}].Monto" 
                                       class="form-control monto-input" 
                                       type="number"
                                       min="0"
                                       step="0.01"
                                       oninput="calcularTotalPagos()" />
                            </div>
                            <span class="text-danger field-validation-valid" 
                                  data-valmsg-for="MetodosPago[${newIndex}].Monto" 
                                  data-valmsg-replace="true"></span>
                        </div>
                    </div>
                    <div class="col-md-2 d-flex align-items-end">
                        <button type="button" class="btn btn-danger btn-sm btn-eliminar-metodo" onclick="eliminarMetodoPago(this)">
                            <i class="bi bi-trash"></i> Eliminar
                        </button>
                    </div>
                </div>
            </div>
        </div>
    `;

                $('#metodosPagoContainer').append(html);

                // Habilitar botones de eliminar si hay más de un método
                if (metodoCounter > 1) {
                    $('.btn-eliminar-metodo').prop('disabled', false);
                }

                // Mostrar mensaje si alcanzamos el máximo
                if (metodoCounter >= 4) {
                    $('#maxMetodosMsg').removeClass('d-none');
                }

                // Revalidar el formulario
                var form = $('#formPagos');
                form.removeData('validator');
                form.removeData('unobtrusiveValidation');
                $.validator.unobtrusive.parse(form);
            });

            // Evento para cambios en los montos
            $(document).on('input', '.monto-input', function () {
                calcularTotalPagos();
            });
        });

        // Función para eliminar un método de pago
        function eliminarMetodoPago(button) {
            var items = $('.metodo-pago-item');

            if (items.length > 1) {
                $(button).closest('.metodo-pago-item').remove();

                metodoCounter = $('#metodosPagoContainer .metodo-pago-item').length;

                recalcularIndicesMetodosPago();

                $('#maxMetodosMsg').addClass('d-none');

                if (metodoCounter <= 1) {
                    $('.btn-eliminar-metodo').prop('disabled', true);
                }

                var form = $('#formPagos');
                form.removeData('validator');
                form.removeData('unobtrusiveValidation');
                $.validator.unobtrusive.parse(form);

                calcularTotalPagos();
            } else {
                alert('Debe haber al menos un método de pago.');
            }
        }


        // Función para recalcular índices
        function recalcularIndicesMetodosPago() {
            $('.metodo-pago-item').each(function (index) {
                $(this).attr('data-index', index);

                // Actualizar names de todos los campos
                $(this).find('[name]').each(function () {
                    var name = $(this).attr('name');
                    if (name) {
                        name = name.replace(/MetodosPago\[\d+\]\./, `MetodosPago[${index}].`);
                        $(this).attr('name', name);
                    }
                });

                // Actualizar data-valmsg-for
                $(this).find('[data-valmsg-for]').each(function () {
                    var forAttr = $(this).attr('data-valmsg-for');
                    if (forAttr) {
                        forAttr = forAttr.replace(/MetodosPago\[\d+\]\./, `MetodosPago[${index}].`);
                        $(this).attr('data-valmsg-for', forAttr);
                    }
                });
            });
        }

        // Función para calcular total pagado y restante
        function calcularTotalPagos() {
            let totalPagado = 0;
            $('.monto-input').each(function () {
                const monto = parseFloat($(this).val()) || 0;
                totalPagado += monto;
            });

            const totalVenta = @ViewBag.TotalVenta;
            const restante = totalVenta - totalPagado;

            // Formatear y mostrar valores
            $('#totalPagado').text(formatCurrency(totalPagado));
            $('#restante').text(formatCurrency(restante));

            // Cambiar color según el restante
            const restanteElement = $('#restante');
            if (Math.abs(restante) < 0.01) {
                restanteElement.removeClass('text-danger').addClass('text-success');
                $('#submitBtn').prop('disabled', false);
            } else if (restante > 0) {
                restanteElement.removeClass('text-success').addClass('text-danger');
                $('#submitBtn').prop('disabled', false);
            } else {
                restanteElement.removeClass('text-success').addClass('text-warning');
                $('#submitBtn').prop('disabled', false);
            }
        }

        // Función auxiliar para formatear moneda
        function formatCurrency(value) {
            return value.toLocaleString('es-CO', {
                style: 'currency',
                currency: 'COP',
                minimumFractionDigits: 0,
                maximumFractionDigits: 0
            });
        }

        // Función para actualizar el método de pago seleccionado
        function actualizarMetodoPago(select) {
            // Puedes agregar lógica adicional aquí si es necesario
            console.log('Método de pago actualizado:', $(select).val());
        }
    </script>
}