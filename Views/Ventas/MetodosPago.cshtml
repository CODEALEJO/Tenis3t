@using System.Globalization
@model Tenis3t.Models.VentaViewModel

@{
    ViewData["Title"] = "Métodos de Pago";
}

<div class="container">
    <div class="card">
        <div class="card-header">
            <h1 class="mb-0">Métodos de Pago</h1>
            <h4 class="mb-0">Total de la Venta: @ViewBag.TotalVenta.ToString("C", new CultureInfo("es-CO"))</h4>
        </div>

        @if (TempData["ErrorMessage"] != null)
        {
            <div class="alert alert-danger m-3">
                @TempData["ErrorMessage"]
            </div>
        }

        <form asp-action="MetodosPago" method="post" id="formPagos">
            <div asp-validation-summary="ModelOnly" class="text-danger m-3"></div>

            <input type="hidden" asp-for="NombreCliente" />
            <input type="hidden" asp-for="CedulaCliente" />
            <input type="hidden" asp-for="TelefonoCliente" />
            <input type="hidden" asp-for="EmailCliente" />

            <div class="card-body">
                <!-- Productos Seleccionados -->
                <div class="mb-4">
                    <h4 class="mb-3">Productos Seleccionados</h4>
                    <div class="table-responsive">
                        <table class="table table-striped table-bordered">
                            <thead class="thead-dark">
                                <tr>
                                    <th>Producto</th>
                                    <th>Talla</th>
                                    <th>Cantidad</th>
                                    <th>Precio Unitario</th>
                                    <th>Subtotal</th>
                                </tr>
                            </thead>
                            <tbody>
                                @for (int i = 0; i < Model.Detalles.Count; i++)
                                {
                                    <tr>
                                        <td>
                                            @Model.Detalles[i].NombreProducto
                                            <input type="hidden" asp-for="@Model.Detalles[i].NombreProducto" />
                                            <input type="hidden" asp-for="@Model.Detalles[i].TallaInventarioId" />
                                        </td>
                                        <td>
                                            @Model.Detalles[i].Talla
                                            <input type="hidden" asp-for="@Model.Detalles[i].Talla" />
                                        </td>
                                        <td>
                                            @Model.Detalles[i].Cantidad
                                            <input type="hidden" asp-for="@Model.Detalles[i].Cantidad" />
                                        </td>
                                        <td>
                                            @Model.Detalles[i].PrecioUnitario.ToString("C", new CultureInfo("es-CO"))
                                            <input type="hidden" asp-for="@Model.Detalles[i].PrecioUnitario" />
                                        </td>
                                        <td>
                                            @((Model.Detalles[i].PrecioUnitario * Model.Detalles[i].Cantidad).ToString("C", new CultureInfo("es-CO")))
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>

                <!-- Métodos de Pago -->
                <div class="mb-4">
                    <div class="d-flex justify-content-between align-items-center mb-3">
                        <h4 class="mb-0">Métodos de Pago</h4>
                        <button type="button" id="addPagoBtn" class="btn btn-success">
                            <i class="bi bi-plus-circle"></i> Agregar Método
                        </button>
                    </div>

                    <div id="metodosPagoContainer">
                        @for (int i = 0; i < Model.MetodosPago.Count; i++)
                        {
                            <div class="card mb-3 metodo-pago-item" data-index="@i">
                                <div class="card-body">
                                    <div class="row">
                                        <div class="col-md-4">
                                            <div class="form-group">
                                                <label class="control-label">Método de Pago</label>
                                                <select asp-for="@Model.MetodosPago[i].MetodoPagoId" 
                                                        class="form-control metodo-pago-select">
                                                    <option value="">Seleccione...</option>
                                                    @foreach (var metodo in ViewBag.MetodosPagoDisponibles)
                                                    {
                                                        <option value="@metodo.Value">@metodo.Text</option>
                                                    }
                                                </select>
                                                <span asp-validation-for="@Model.MetodosPago[i].MetodoPagoId" class="text-danger"></span>
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="form-group">
                                                <label asp-for="@Model.MetodosPago[i].Monto" class="control-label">Monto</label>
                                                <div class="input-group">
                                                    <div class="input-group-prepend">
                                                        <span class="input-group-text">$</span>
                                                    </div>
                                                    <input asp-for="@Model.MetodosPago[i].Monto" 
                                                           class="form-control monto-input" 
                                                           onchange="calcularTotalPagos()" />
                                                </div>
                                                <span asp-validation-for="@Model.MetodosPago[i].Monto" class="text-danger"></span>
                                            </div>
                                        </div>
                                        <div class="col-md-2 d-flex align-items-end">
                                            <button type="button" class="btn btn-danger btn-sm remove-pago" onclick="removePagoItem(this)">
                                                <i class="bi bi-trash"></i>
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>

                <!-- Resumen de Pagos -->
                <div class="card mb-4">
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-6">
                                <h5>Total Venta: <span class="float-right">@ViewBag.TotalVenta.ToString("C", new CultureInfo("es-CO"))</span></h5>
                                <h5>Total Pagado: <span id="totalPagado" class="float-right">0</span></h5>
                                <h4 id="restanteContainer">
                                    Restante: <span id="restante" class="float-right">@ViewBag.TotalVenta.ToString("C", new CultureInfo("es-CO"))</span>
                                </h4>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Botones de Acción -->
                <div class="d-flex justify-content-between">
                    <div>
                        <a asp-action="Create" class="btn btn-danger">
                            <i class="fas fa-arrow-left"></i> Volver
                        </a>
                    </div>
                    <div>
                        <button type="submit" class="btn btn-primary" id="submitBtn">
                            <i class="fas fa-check"></i> Confirmar Venta
                        </button>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    
    <script>
        // Función para calcular el total de pagos
        function calcularTotalPagos() {
            let totalPagado = 0;
            const montos = document.querySelectorAll('.monto-input');
            
            montos.forEach(input => {
                const monto = parseFloat(input.value) || 0;
                totalPagado += monto;
            });
            
            const totalVenta = @ViewBag.TotalVenta;
            const restante = totalVenta - totalPagado;
            
            document.getElementById('totalPagado').textContent = totalPagado.toLocaleString('es-CO', {
                style: 'currency',
                currency: 'COP'
            });
            
            document.getElementById('restante').textContent = restante.toLocaleString('es-CO', {
                style: 'currency',
                currency: 'COP'
            });
            
            // Cambiar color según el restante
            const restanteElement = document.getElementById('restante');
            if (Math.abs(restante) < 0.01) {
                restanteElement.classList.remove('text-danger');
                restanteElement.classList.add('text-success');
            } else {
                restanteElement.classList.remove('text-success');
                restanteElement.classList.add('text-danger');
            }
        }

        // Función para eliminar un método de pago
        function removePagoItem(button) {
            const container = document.getElementById('metodosPagoContainer');
            const items = container.querySelectorAll('.metodo-pago-item');
            
            if (items.length > 1) {
                button.closest('.metodo-pago-item').remove();
                recalcularIndices();
                calcularTotalPagos();
                $.validator.unobtrusive.parse(container);
            } else {
                // Si solo queda uno, limpiar sus valores
                const item = button.closest('.metodo-pago-item');
                item.querySelector('.metodo-pago-select').value = '';
                item.querySelector('.monto-input').value = '';
                calcularTotalPagos();
            }
        }

        // Función para agregar un nuevo método de pago
        function addPagoItem() {
            const container = document.getElementById('metodosPagoContainer');
            const nextIndex = container.querySelectorAll('.metodo-pago-item').length;
            
            // Obtener las opciones de métodos de pago del primer select existente
            const primerSelect = container.querySelector('.metodo-pago-select');
            const optionsHtml = primerSelect ? primerSelect.innerHTML : '<option value="">Seleccione...</option>';
            
            const newItem = document.createElement('div');
            newItem.className = 'card mb-3 metodo-pago-item';
            newItem.setAttribute('data-index', nextIndex);
            newItem.innerHTML = `
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="control-label">Método de Pago</label>
                                <select name="MetodosPago[${nextIndex}].MetodoPagoId" 
                                        class="form-control metodo-pago-select">
                                    ${optionsHtml}
                                </select>
                                <span class="text-danger field-validation-valid" 
                                      data-valmsg-for="MetodosPago[${nextIndex}].MetodoPagoId" 
                                      data-valmsg-replace="true"></span>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label class="control-label">Monto</label>
                                <div class="input-group">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text">$</span>
                                    </div>
                                    <input name="MetodosPago[${nextIndex}].Monto" 
                                           class="form-control monto-input" 
                                           type="number"
                                           min="0"
                                           step="100"
                                           onchange="calcularTotalPagos()"
                                           data-val="true" 
                                           data-val-required="El campo Monto es obligatorio." 
                                           data-val-number="El campo Monto debe ser un número." />
                                </div>
                                <span class="text-danger field-validation-valid" 
                                      data-valmsg-for="MetodosPago[${nextIndex}].Monto" 
                                      data-valmsg-replace="true"></span>
                            </div>
                        </div>
                        <div class="col-md-2 d-flex align-items-end">
                            <button type="button" class="btn btn-danger btn-sm remove-pago" onclick="removePagoItem(this)">
                                <i class="bi bi-trash"></i>
                            </button>
                        </div>
                    </div>
                </div>
            `;
            
            container.appendChild(newItem);
            
            // Inicializar validación para el nuevo elemento
            $.validator.unobtrusive.parse(newItem);
            
            // Recalcular totales
            calcularTotalPagos();
        }
        
        // Función para recalcular índices después de eliminar
        function recalcularIndices() {
            const items = document.querySelectorAll('.metodo-pago-item');
            items.forEach((item, index) => {
                item.setAttribute('data-index', index);
                
                // Actualizar names
                const inputs = item.querySelectorAll('[name]');
                inputs.forEach(input => {
                    const name = input.getAttribute('name');
                    if (name) {
                        input.setAttribute('name', name.replace(/\[\d+\]/, `[${index}]`));
                    }
                });
                
                // Actualizar data-valmsg-for
                const spans = item.querySelectorAll('[data-valmsg-for]');
                spans.forEach(span => {
                    const forAttr = span.getAttribute('data-valmsg-for');
                    if (forAttr) {
                        span.setAttribute('data-valmsg-for', forAttr.replace(/\[\d+\]/, `[${index}]`));
                    }
                });
            });
        }

        // Inicialización cuando el DOM está listo
        document.addEventListener('DOMContentLoaded', function() {
            // Configurar el botón para agregar métodos de pago
            document.getElementById('addPagoBtn').addEventListener('click', addPagoItem);
            
            // Calcular totales al cargar la página
            calcularTotalPagos();
        });
    </script>
}