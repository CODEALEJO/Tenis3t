@model List<Tenis3t.Models.Prestamo>
@using Microsoft.AspNetCore.Identity
@inject UserManager<IdentityUser> UserManager

@{
    ViewData["Title"] = "Prestamos";
    var usuarioActual = await UserManager.GetUserAsync(User);
}

<div class="container mt-4">
    <h2 class="mb-4 text-center">Gestión de Préstamos</h2>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show">
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <!-- Filtros y botones -->
    <div class="card mb-4">
        <div class="card-body">
            <div class="row">
                <div class="col-md-4">
                    <div class="btn-group" role="group">
                        <a asp-action="Index" asp-route-tipo="todos" 
                           class="btn @(ViewBag.TipoSeleccionado == "todos" ? "btn-primary" : "btn-outline-primary")">
                            Todos
                        </a>
                        <a asp-action="Index" asp-route-tipo="realizados" 
                           class="btn @(ViewBag.TipoSeleccionado == "realizados" ? "btn-primary" : "btn-outline-primary")">
                            Realizados
                        </a>
                        <a asp-action="Index" asp-route-tipo="recibidos" 
                           class="btn @(ViewBag.TipoSeleccionado == "recibidos" ? "btn-primary" : "btn-outline-primary")">
                            Recibidos
                        </a>
                    </div>
                </div>
                
                <div class="col-md-4">
                    <form method="get" class="input-group">
                        <input type="text" name="filtroNombre" class="form-control" placeholder="Filtrar por local/persona" value="@ViewBag.FiltroNombre">
                        <button type="submit" class="btn btn-outline-secondary">Filtrar</button>
                    </form>
                </div>
                
                <div class="col-md-4">
                    <form method="get" class="input-group">
                        <input type="date" name="filtroFecha" class="form-control" value="@ViewBag.FiltroFecha">
                        <button type="submit" class="btn btn-outline-secondary">Filtrar</button>
                    </form>
                </div>
            </div>
            
            <div class="mt-3">
                <div class="d-flex justify-content-between">
                    <div>
                        <a asp-action="Create" asp-route-tipo="realizados" class="btn btn-success me-2">
                            <i class="bi bi-plus-circle"></i> Realizar préstamo 
                        </a>
                        <a asp-action="Create" asp-route-tipo="recibidos" class="btn btn-info">
                            <i class="bi bi-plus-circle"></i> Recibir préstamo
                        </a>
                    </div>
                    <span class="badge bg-secondary align-self-center">
                        Total: @Model.Count
                    </span>
                </div>
            </div>
        </div>
    </div>

    <!-- Listado de préstamos -->
    <div class="table-responsive">
        <table class="table table-striped table-hover">
            <thead class="table-dark">
                <tr>
                    <th>Producto</th>
                    <th>Tipo</th>
                    <th>Local/Persona</th>
                    <th>Cantidad</th>
                    <th>Fecha Préstamo</th>
                    <th>Fecha Devolución</th>
                    <th>Estado</th>
                    <th>Días Restantes</th>
                    <th>Acciones</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr class="@(item.EstaVencido ? "table-danger" : "")">
                        <td>@item.Inventario?.Nombre</td>
                        <td>
                            @if (item.UsuarioPrestamistaId == usuarioActual.Id)
                            {
                                <span class="badge bg-warning">Realizado</span>
                            }
                            else
                            {
                                <span class="badge bg-info">Recibido</span>
                            }
                        </td>
                        <td>
                            @if (item.UsuarioPrestamistaId == usuarioActual.Id)
                            {
                                @item.UsuarioReceptor?.UserName
                            }
                            else
                            {
                                @item.UsuarioPrestamista?.UserName
                            }
                        </td>
                        <td>@item.Cantidad</td>
                        <td>@item.FechaPrestamo.ToString("dd/MM/yyyy")</td>
                        <td>@item.FechaDevolucionEstimada.ToString("dd/MM/yyyy")</td>
                        <td>
                            <span class="badge @GetBadgeClass(item.Estado)">
                                @item.Estado
                            </span>
                        </td>
                        <td>@item.DiasRestantes</td>
                        <td>
                            @if (item.Estado == "Prestado" && item.UsuarioPrestamistaId == usuarioActual.Id)
                            {
                                <a asp-action="Devolver" asp-route-id="@item.Id" class="btn btn-sm btn-success">
                                    <i class="bi bi-check-circle"></i> Devolver
                                </a>
                            }
                            else if (item.Estado == "Prestado")
                            {
                                <span class="text-muted">Esperando devolución</span>
                            }
                            else
                            {
                                <span class="text-muted">Completado</span>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@functions {
    string GetBadgeClass(string estado)
    {
        return estado switch
        {
            "Prestado" => "bg-warning",
            "Devuelto" => "bg-success",
            "Vencido" => "bg-danger",
            _ => "bg-secondary",
        };
    }
}