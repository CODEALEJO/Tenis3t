@model Tenis3t.Models.Inventario

@{
    ViewData["Title"] = "Editar Producto";
}

<div class="container mt-4">
    <h2>Editar Producto</h2>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show">
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show">
            @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <form asp-action="Edit" method="post" id="productoForm">
        @Html.AntiForgeryToken()
        <input type="hidden" asp-for="Id" />
        <input type="hidden" name="claveSeguridad" id="claveSeguridad" />

        <div class="mb-3">
            <label asp-for="Nombre" class="form-label">Nombre del Producto</label>
            <input asp-for="Nombre" class="form-control" />
            <span asp-validation-for="Nombre" class="text-danger"></span>
        </div>

        <div class="mb-3">
            <label asp-for="Genero" class="form-label">Género</label>
            <select asp-for="Genero" class="form-select" id="generoSelect">
                @foreach (var genero in ViewBag.Generos)
                {
                    <option value="@genero.Value" selected="@genero.Selected">@genero.Text</option>
                }
            </select>
            <span asp-validation-for="Genero" class="text-danger"></span>
        </div>

        <div class="mb-3">
            <label asp-for="Costo" class="form-label">Costo Unitario</label>
            <input asp-for="Costo" class="form-control" id="costoInput" />
            <span asp-validation-for="Costo" class="text-danger"></span>
        </div>

        <div class="mb-3">
            <label asp-for="PrecioVenta" class="form-label">Precio de Venta</label>
            <input asp-for="PrecioVenta" class="form-control" id="precioVentaInput" />
            <span asp-validation-for="PrecioVenta" class="text-danger"></span>
        </div>

        <!-- Sección de tallas -->
        <div class="mb-3" id="tallasSection">
            <h5>Stock por Tallas</h5>
            <div id="tallasContainer">
                @{
                    var tallasDict = Model.Tallas?.ToDictionary(t => t.Talla, t => t.Cantidad) ?? new Dictionary<string, int>();
                    var tallasDisponibles = ViewBag.TallasDisponibles as string[] ?? new string[0];
                    
                    foreach (var talla in tallasDisponibles)
                    {
                        var cantidad = tallasDict.ContainsKey(talla) ? tallasDict[talla] : 0;
                        <div class="row mb-2">
                            <div class="col-md-2">
                                <label class="form-label">Talla @talla</label>
                            </div>
                            <div class="col-md-4">
                                <input type="number" name="tallas[@talla]" class="form-control talla-input" 
                                       min="0" value="@cantidad" data-talla="@talla" />
                            </div>
                        </div>
                    }
                }
            </div>
            <div class="mt-2">
                <label class="form-label">Total en Stock:</label>
                <input type="text" class="form-control" id="totalStock" value="@Model.Cantidad" readonly />
            </div>
        </div>

        <div class="mb-3">
            <div class="row">
                <div class="col-md-4">
                    <label class="form-label">Ganancia por Unidad</label>
                    <input type="text" class="form-control" id="gananciaUnidad" 
                           value="@((Model.PrecioVenta - Model.Costo).ToString("N0"))" readonly />
                </div>
                <div class="col-md-4">
                    <label class="form-label">Ganancia Total</label>
                    <input type="text" class="form-control" id="gananciaTotal" 
                           value="@((Model.PrecioVenta - Model.Costo) * Model.Cantidad).ToString("N0"))" readonly />
                </div>
            </div>
        </div>

        <div class="mb-3">
            <button type="button" class="btn btn-success" onclick="validarClave()">
                <i class="bi bi-save"></i> Guardar Cambios
            </button>
            <a asp-action="Index" class="btn btn-secondary">
                <i class="bi bi-arrow-left"></i> Cancelar
            </a>
        </div>
    </form>
</div>

<!-- Modal para clave de seguridad -->
<div class="modal fade" id="claveModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Confirmar cambios</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="mb-3">
                    <label for="claveInput" class="form-label">Ingrese la clave de seguridad:</label>
                    <input type="password" class="form-control" id="claveInput">
                    <div id="claveError" class="text-danger" style="display: none;">Clave incorrecta</div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-primary" onclick="confirmarCambios()">Confirmar</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Definir la contraseña como variable JavaScript
            const deletePassword = "3T2025";
            
            const formatoMoneda = new Intl.NumberFormat('es-CO', {
                style: 'decimal',
                minimumFractionDigits: 0,
                maximumFractionDigits: 0
            });

            // Calcular ganancias
            function calcularGanancias() {
                const costo = parseFloat(document.getElementById('costoInput').value) || 0;
                const precioVenta = parseFloat(document.getElementById('precioVentaInput').value) || 0;
                const gananciaPorUnidad = precioVenta - costo;
                const totalStock = parseInt(document.getElementById('totalStock').value) || 0;
                const gananciaTotal = gananciaPorUnidad * totalStock;

                document.getElementById('gananciaUnidad').value = formatoMoneda.format(gananciaPorUnidad);
                document.getElementById('gananciaTotal').value = formatoMoneda.format(gananciaTotal);
            }

            // Calcular total de stock
            function calcularTotalStock() {
                const inputs = document.querySelectorAll('.talla-input');
                let total = 0;

                inputs.forEach(input => {
                    total += parseInt(input.value) || 0;
                });

                document.getElementById('totalStock').value = total;
                calcularGanancias();
            }

            // Event listeners
            document.getElementById('costoInput').addEventListener('input', calcularGanancias);
            document.getElementById('precioVentaInput').addEventListener('input', calcularGanancias);
            document.getElementById('tallasContainer').addEventListener('input', function (e) {
                if (e.target.classList.contains('talla-input')) {
                    calcularTotalStock();
                }
            });

            // Validar clave de seguridad
            window.validarClave = function() {
                // Mostrar modal para ingresar clave
                var modal = new bootstrap.Modal(document.getElementById('claveModal'));
                modal.show();
            };

            window.confirmarCambios = function() {
                const claveIngresada = document.getElementById('claveInput').value;
                const claveError = document.getElementById('claveError');

                if (claveIngresada === deletePassword) {
                    document.getElementById('claveSeguridad').value = claveIngresada;
                    document.getElementById('productoForm').submit();
                } else {
                    claveError.style.display = 'block';
                }
            };

            // Calcular valores iniciales
            calcularGanancias();
        });
    </script>
}